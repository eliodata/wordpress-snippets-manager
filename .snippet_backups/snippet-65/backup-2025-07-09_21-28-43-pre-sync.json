{
  "id": "65",
  "name": "CHOIX ACTION DE FORMATION et variations produit DEPUIS COMMANDE - select cpt fsbdd_relsessaction_cpt_produit - modifier session",
  "description": "* Active: true",
  "code": "// Ajouter la nouvelle metabox combinée\nadd_action( 'add_meta_boxes', 'add_combined_meta_box' );\nfunction add_combined_meta_box() {\n    add_meta_box(\n        'combined_meta_box',\n        'Modifier options / session',\n        'display_combined_meta_box',\n        'shop_order',\n        'side',\n        'default'\n    );\n}\n\nfunction display_combined_meta_box( $post ) {\n    // Récupère la commande\n    $order = wc_get_order( $post->ID );\n    // S'assure qu'on a un objet commande (peut être \"faux\" dans certains cas de commandes vides)\n    $items = $order ? $order->get_items() : array();\n\n    // ------------------------------------------------------------------\n    // Préparation d'une liste de tous les produits \"visibles\" du catalogue.\n    // ------------------------------------------------------------------\n    $all_visible_products_args = array(\n        'post_type'      => 'product',\n        'post_status'    => 'publish',\n        'posts_per_page' => -1,\n        'tax_query'      => array(\n            array(\n                'taxonomy' => 'product_visibility',\n                'field'    => 'name',\n                'terms'    => array( 'exclude-from-catalog' ), // Produits exclus du catalogue\n                'operator' => 'NOT IN',\n            ),\n        ),\n        'orderby' => 'title',\n        'order'   => 'ASC',\n    );\n    $all_visible_products = get_posts( $all_visible_products_args );\n\n    // Préparer la liste des produits variables pour le JavaScript\n    $variable_products = array();\n    foreach ($all_visible_products as $prod) {\n        $product = wc_get_product($prod->ID);\n        if ($product && $product->is_type('variable')) {\n            $variable_products[] = $prod->ID;\n        }\n    }\n    $variable_products_json = json_encode($variable_products);\n\n    // ------------------------------------------------------------------\n    // Styles pour l'affichage - AMÉLIORÉS\n    // ------------------------------------------------------------------\n    echo '<style>\n    .combined-forms-container {\n        margin-top: 5px;\n        font-size: 11px;\n    }\n    .combined-forms-container form {\n        margin-bottom: 6px;\n        position: relative;\n    }\n    .combined-forms-container .form-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 4px;\n    }\n    .combined-forms-container select {\n        width: 70%;\n        padding: 3px 20px 3px 5px;\n        border-radius: 3px;\n        box-shadow: 0 1px 2px rgba(0,0,0,0.07);\n        border: 1px solid #ddd;\n        background-color: #fff;\n        color: #32373c;\n        height: 24px;\n        font-size: 11px;\n        -webkit-appearance: none;\n        background-image: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' width=\\'8\\' height=\\'8\\' fill=\\'%23555\\' viewBox=\\'0 0 16 16\\'%3E%3Cpath d=\\'M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\\'/%3E%3C/svg%3E\");\n        background-repeat: no-repeat;\n        background-position: calc(100% - 5px) center;\n        background-size: 8px;\n    }\n    .combined-forms-container select:focus {\n        border-color: #2271b1;\n        box-shadow: 0 0 0 1px #2271b1;\n        outline: none;\n    }\n    .combined-forms-container .form-section {\n        margin-bottom: 6px;\n        padding-bottom: 4px;\n        border-bottom: 1px solid #f0f0f0;\n    }\n    .combined-forms-container .form-section:last-child {\n        border-bottom: none;\n        margin-bottom: 0;\n        padding-bottom: 0;\n    }\n    .combined-forms-container button,\n    .combined-forms-container .button-link {\n        background: #f6f7f7;\n        border: 1px solid #2271b1;\n        color: #2271b1;\n        cursor: pointer;\n        font-size: 13px;\n        padding: 6px 12px;\n        text-align: center;\n        border-radius: 3px;\n        text-decoration: none;\n        transition: all 0.1s ease-in-out;\n        height: 34px;\n        line-height: 1;\n        float: right;\n    }\n    .combined-forms-container button:hover,\n    .combined-forms-container .button-link:hover {\n        background: #2271b1;\n        border-color: #2271b1;\n        color: #fff;\n    }\n    .combined-forms-container .new-session-link {\n        display: flex;\n        align-items: center;\n        text-decoration: none;\n        color: #2271b1;\n        padding: 8px;\n        border-radius: 3px;\n        transition: all 0.1s ease-in-out;\n        background: #f6f7f7;\n        border: 1px solid #ddd;\n    }\n    .combined-forms-container .new-session-link:hover {\n        background: #2271b1;\n        color: #fff!important;\n        border-color: #2271b1;\n    }\n    .combined-forms-container .dashicons {\n        margin-right: 6px;\n        font-size: 16px;\n        height: 16px;\n        width: 16px;\n    }\n    .combined-forms-container .no-items-message {\n        background: #f8f9fa;\n        padding: 8px;\n        border-radius: 3px;\n        border-left: 3px solid #ddd;\n        margin-bottom: 10px;\n        font-style: italic;\n        color: #646970;\n    }\n    .combined-forms-container .variations-container {\n        margin-top: 8px;\n        display: none;\n    }\n    .combined-forms-container .variations-title {\n        font-size: 12px;\n        color: #666;\n        margin-bottom: 5px;\n    }\n    .combined-forms-container .loading-spinner {\n        display: inline-block;\n        width: 16px;\n        height: 16px;\n        border: 2px solid rgba(0,0,0,0.1);\n        border-radius: 50%;\n        border-top-color: #2271b1;\n        animation: spinner 0.6s linear infinite;\n        margin-left: 10px;\n        vertical-align: middle;\n    }\n    @keyframes spinner {\n        to {transform: rotate(360deg);}\n    }\n    .current-product-info {\n        background: #f0f6fc;\n        padding: 8px;\n        border-radius: 3px;\n        border-left: 3px solid #2271b1;\n        margin-bottom: 8px;\n        font-size: 12px;\n    }\n    .custom-category-fields {\n        margin-top: 8px;\n        display: none;\n        background: #f9f9f9;\n        padding: 8px;\n        border-radius: 3px;\n        border: 1px solid #ddd;\n    }\n    .custom-category-fields input {\n        width: 100%;\n        margin-bottom: 8px;\n        padding: 6px 8px;\n        border: 1px solid #ddd;\n        border-radius: 3px;\n    }\n    .custom-category-fields .note {\n        font-size: 11px;\n        color: #666;\n        font-style: italic;\n    }\n    </style>';\n\n    echo '<div class=\"combined-forms-container\">';\n\n    // ---------------------------------------------------------------------------------\n    // CAS 1 : La commande est vide => on affiche le sélecteur de tous les produits\n    // ---------------------------------------------------------------------------------\n    if ( empty( $items ) ) {\n        echo '<div class=\"form-section\">';\n        if ( ! empty( $all_visible_products ) ) {\n            echo '<form id=\"add_product_form\">';\n            \n            // Select pour choisir le produit\n            echo '<div class=\"form-row\">';\n            echo '<select name=\"product_id\" id=\"product_select\">';\n            echo '<option value=\"\">Commande vierge : sélectionner un produit</option>';\n            foreach ( $all_visible_products as $prod ) {\n                $prod_obj = wc_get_product( $prod->ID );\n                if ( ! $prod_obj ) {\n                    continue;\n                }\n                \n                // Exclure les produits avec \"définir\" dans le nom\n                if (stripos($prod_obj->get_name(), 'définir') !== false) {\n                    continue;\n                }\n                \n                // Marquer les produits variables\n                $product_type = $prod_obj->get_type();\n                $is_variable = ($product_type === 'variable') ? ' (Variable)' : '';\n                \n                echo '<option value=\"' . esc_attr( $prod->ID ) . '\" data-type=\"' . esc_attr($product_type) . '\">' \n                    . esc_html( $prod_obj->get_name() . $is_variable ) . '</option>';\n            }\n            echo '</select>';\n            echo '<div id=\"product_loading\" class=\"loading-spinner\" style=\"display: none;\"></div>';\n            echo '</div>';\n            \n            // Container pour les variations\n            echo '<div id=\"variations_container\" class=\"variations-container\">';\n            echo '<div class=\"variations-title\">Sélectionner une variation:</div>';\n            echo '<div class=\"form-row\">';\n            echo '<select name=\"variation_id\" id=\"variation_select\">';\n            echo '<option value=\"\">Choisir une variation</option>';\n            echo '</select>';\n            echo '</div>';\n            echo '</div>';\n            \n            echo '<div class=\"form-row\" style=\"margin-top: 10px;\">';\n            echo '<input type=\"hidden\" name=\"order_id\" value=\"' . esc_attr( $post->ID ) . '\">';\n            echo '<button type=\"button\" id=\"add_product_button\">Ajouter</button>';\n            echo '</div>';\n            echo '</form>';\n        } else {\n            echo '<div class=\"no-items-message\">Aucun produit visible dans le catalogue.</div>';\n        }\n        echo '</div>'; // fin section\n\n        // Lien pour créer une nouvelle session\n        echo '<div class=\"form-section\">';\n        echo '<a href=\"https://formationstrategique.fr/wp-admin/post-new.php?post_type=action-de-formation\" target=\"_blank\" class=\"new-session-link\">';\n        echo '<span class=\"dashicons dashicons-plus-alt\"></span>Créer une nouvelle Session';\n        echo '</a>';\n        echo '</div>'; // fin section\n\n        echo '</div>'; // fin container\n        \n        // Ajouter le script spécifique pour la gestion des variations en temps réel\n        ?>\n        <script type=\"text/javascript\">\n        jQuery(document).ready(function($) {\n            // Liste des produits variables\n            var variableProducts = <?php echo $variable_products_json; ?>;\n            \n            // Gestion du changement de produit\n            $('#product_select').on('change', function() {\n                var productId = $(this).val();\n                var productType = $(this).find('option:selected').data('type');\n                \n                // Cacher le conteneur de variations par défaut\n                $('#variations_container').hide();\n                \n                // Si c'est un produit variable, charger les variations\n                if (productId && productType === 'variable') {\n                    $('#product_loading').show();\n                    \n                    $.ajax({\n                        url: ajaxurl,\n                        type: 'POST',\n                        data: {\n                            action: 'get_product_variations',\n                            product_id: productId\n                        },\n                        success: function(response) {\n                            $('#product_loading').hide();\n                            \n                            if (response.success && response.data.variations) {\n                                // Mettre à jour le select des variations\n                                var variationSelect = $('#variation_select');\n                                variationSelect.empty();\n                                variationSelect.append('<option value=\"\">Choisir une variation</option>');\n                                \n                                $.each(response.data.variations, function(index, variation) {\n                                    variationSelect.append('<option value=\"' + variation.id + '\">' + variation.name + '</option>');\n                                });\n                                \n                                // Afficher le conteneur des variations\n                                $('#variations_container').show();\n                            }\n                        },\n                        error: function() {\n                            $('#product_loading').hide();\n                            alert('Erreur lors du chargement des variations');\n                        }\n                    });\n                }\n            });\n            \n            // Gestion du bouton d'ajout\n            $('#add_product_button').on('click', function() {\n                $(this).prop('disabled', true).text('...');\n                \n                var productId = $('#product_select').val();\n                var variationId = $('#variation_select').val();\n                var productType = $('#product_select').find('option:selected').data('type');\n                \n                // Déterminer l'ID à utiliser (variation ou produit)\n                var finalId = productId;\n                if (productType === 'variable' && variationId) {\n                    finalId = variationId;\n                } else if (productType === 'variable' && !variationId) {\n                    alert('Veuillez sélectionner une variation');\n                    $(this).prop('disabled', false).text('Ajouter');\n                    return;\n                }\n                \n                if (!finalId) {\n                    alert('Veuillez sélectionner un produit');\n                    $(this).prop('disabled', false).text('Ajouter');\n                    return;\n                }\n                \n                var data = {\n                    'action': 'replace_product_in_order',\n                    'order_id': $('[name=\"order_id\"]').val(),\n                    'product_id': finalId\n                };\n                \n                $.post(ajaxurl, data, function(response) {\n                    if(response.success) {\n                        alert('Produit ajouté dans la commande !');\n                        location.reload();\n                    } else {\n                        alert('Erreur: ' + response.data.message);\n                        $('#add_product_button').prop('disabled', false).text('Ajouter');\n                    }\n                }).fail(function() {\n                    alert('Erreur lors du traitement de la requête.');\n                    $('#add_product_button').prop('disabled', false).text('Ajouter');\n                });\n            });\n        });\n        </script>\n        <?php\n        return;\n    }\n\n    // ---------------------------------------------------------------------------------\n    // CAS 2 : La commande a au moins un produit\n    // ---------------------------------------------------------------------------------\n    // On prend le premier item\n    $first_item = reset( $items );\n    $product_id = $first_item->get_product_id();\n    $variation_id = $first_item->get_variation_id();\n    $product    = wc_get_product( $variation_id ? $variation_id : $product_id );\n\n    if ( ! $product ) {\n        echo '<div class=\"no-items-message\">Impossible de trouver le produit associé à cet article de commande.</div>';\n        echo '</div>'; // fin container\n        return;\n    }\n\n    // Récupère les éventuelles \"actions-de-formation\" liées à ce produit\n    // Pour les variations, on cherche par rapport au produit parent\n    $search_product_id = $variation_id ? $product->get_parent_id() : $product_id;\n    $args_action = [\n        'post_type'      => 'action-de-formation',\n        'post_status'    => 'publish',\n        'meta_key'       => 'we_startdate',\n        'orderby'        => 'meta_value_num',\n        'order'          => 'ASC',\n        'meta_query'     => [\n            [\n                'key'     => 'fsbdd_relsessproduit',\n                'value'   => $search_product_id,\n                'compare' => '=',\n            ],\n        ],\n        'posts_per_page' => -1,\n    ];\n    $actions = get_posts( $args_action );\n\n    // Vérifie si ce produit a des actions associées\n    $has_actions = ! empty( $actions );\n\n    // Si pas d'actions, on montre le form \"tous les produits\"\n    if ( ! $has_actions ) {\n        echo '<div class=\"form-section\">';\n        if ( ! empty( $all_visible_products ) ) {\n            echo '<form id=\"replace_product_form\">';\n            \n            // Afficher les informations sur le produit actuel\n            echo '<div class=\"current-product-info\">';\n            echo '<strong>Produit actuel:</strong> ' . esc_html($product->get_name());\n            echo '</div>';\n            \n            // Ajouter la section de choix de catégorie si applicable\n            $product_name = $product->get_name();\n            $caces_code = get_caces_code_from_product_name($product_name);\n            \n            if ($caces_code) {\n                // Récupérer les catégories actuelles de l'article\n                $current_categories = wc_get_order_item_meta($first_item->get_id(), 'choix_categorie', true);\n                $current_nb_categories = wc_get_order_item_meta($first_item->get_id(), 'nombre_categories', true);\n                \n                echo '<div class=\"category-selection-section\" style=\"margin-top: 10px;\">';\n                echo '<div style=\"margin-bottom: 8px;\"><strong>Catégories actuelles:</strong> ' . ($current_categories ? esc_html($current_categories) : 'Aucune') . '</div>';\n                \n                // Formulaire pour modifier les catégories\n                echo '<form id=\"update_categories_form\">';\n                echo '<div class=\"form-row\">';\n                echo '<select name=\"new_categories\" id=\"category_select\" style=\"width: 100%; margin-bottom: 8px;\">';\n                echo '<option value=\"\">Modifier les catégories</option>';\n                \n                // Récupérer les combinaisons disponibles pour ce produit\n                $price_table = get_full_price_table();\n                if (isset($price_table[$caces_code])) {\n                    // Déterminer le niveau (initial ou recyclage) - par défaut initial\n                    $niveau = 'initial';\n                    if (stripos($product_name, 'recyclage') !== false) {\n                        $niveau = 'recyclage';\n                    }\n                    \n                    if (isset($price_table[$caces_code][$niveau]['combos'])) {\n                        foreach ($price_table[$caces_code][$niveau]['combos'] as $combo) {\n                            $categories = implode(', ', $combo['categories']);\n                            $selected = ($categories === $current_categories) ? ' selected' : '';\n                            echo '<option value=\"' . esc_attr($categories) . '\"' . $selected . '>' . esc_html($categories) . '</option>';\n                        }\n                    }\n                }\n                \n                // Option personnalisé\n                echo '<option value=\"Personnalisé\">Personnalisé</option>';\n                \n                echo '</select>';\n                \n                // Champs personnalisés (cachés par défaut)\n                echo '<div id=\"custom-category-fields\" class=\"custom-category-fields\">';\n                echo '<input type=\"text\" name=\"custom_categories\" id=\"custom_categories\" placeholder=\"Catégories personnalisées\" />';\n                echo '<input type=\"number\" name=\"custom_ut_pratique\" id=\"custom_ut_pratique\" placeholder=\"UT Pratiques\" min=\"0\" step=\"0.5\" />';\n                echo '<div class=\"note\">Note: UT Théoriques = 1</div>';\n                echo '</div>';\n                echo '</div>';\n                echo '<div class=\"form-row\">';\n                echo '<button type=\"button\" id=\"update_categories_button\" style=\"width: 100%;\">Mettre à jour les catégories</button>';\n                echo '</div>';\n                echo '<input type=\"hidden\" name=\"order_id\" value=\"' . esc_attr($post->ID) . '\">';\n                echo '<input type=\"hidden\" name=\"item_id\" value=\"' . esc_attr($first_item->get_id()) . '\">';\n                echo '</form>';\n                echo '</div>';\n            }\n            \n            echo '<div class=\"form-row\" style=\"margin-top: 8px;\">';\n            echo '<select name=\"similar_product_id\" id=\"similar_product_select\">';\n            echo '<option value=\"\">Remplacer par un autre produit</option>';\n            foreach ( $all_visible_products as $prod ) {\n                $prod_obj = wc_get_product( $prod->ID );\n                if ( ! $prod_obj ) {\n                    continue;\n                }\n                \n                // Exclure les produits avec \"définir\" dans le nom\n                if (stripos($prod_obj->get_name(), 'définir') !== false) {\n                    continue;\n                }\n                \n                // Marquer les produits variables\n                $product_type = $prod_obj->get_type();\n                $is_variable = ($product_type === 'variable') ? ' (Variable)' : '';\n                \n                echo '<option value=\"' . esc_attr( $prod->ID ) . '\" data-type=\"' . esc_attr($product_type) . '\">' \n                    . esc_html( $prod_obj->get_name() . $is_variable ) . '</option>';\n            }\n            echo '</select>';\n            echo '<div id=\"similar_product_loading\" class=\"loading-spinner\" style=\"display: none;\"></div>';\n            echo '</div>';\n            \n            // Container pour les variations du produit de remplacement\n            echo '<div id=\"similar_variations_container\" class=\"variations-container\">';\n            echo '<div class=\"variations-title\">Sélectionner une variation:</div>';\n            echo '<div class=\"form-row\">';\n            echo '<select name=\"similar_variation_id\" id=\"similar_variation_select\">';\n            echo '<option value=\"\">Choisir une variation</option>';\n            echo '</select>';\n            echo '</div>';\n            echo '</div>';\n            \n            echo '<div class=\"form-row\" style=\"margin-top: 10px;\">';\n            echo '<button type=\"button\" id=\"replace_product_button\">OK</button>';\n            echo '</div>';\n            \n            echo '<input type=\"hidden\" name=\"order_id\" value=\"' . esc_attr( $post->ID ) . '\">';\n            echo '</form>';\n        } else {\n            echo '<div class=\"no-items-message\">Aucun produit visible dans le catalogue.</div>';\n        }\n        echo '</div>'; // fin section\n\n    } else {\n        // CAS où il y a bien des actions : on garde le formulaire de \"similaires\"\n\n        // Préparation de la recherche pour produits similaires\n        $parent_product = $variation_id ? wc_get_product($product->get_parent_id()) : $product;\n        $search_title = $parent_product->get_title();\n        $ignore_character = '>';\n        $ignore_index = strpos( $search_title, $ignore_character );\n        if ( $ignore_index !== false ) {\n            $search_title = substr( $search_title, 0, $ignore_index );\n        }\n\n        $args = array(\n            'post_type'      => array('product', 'product_variation'),\n            'post_status'    => 'publish',\n            'orderby'        => 'date',\n            'order'          => 'DESC',\n            'posts_per_page' => -1,\n            's'              => $search_title,\n        );\n        $similar_products = get_posts( $args );\n\n        echo '<div class=\"form-section\">';\n        \n        // Afficher les informations sur le produit actuel\n        echo '<div class=\"current-product-info\">';\n        echo '<strong>Produit actuel:</strong> ' . esc_html($product->get_name());\n        echo '</div>';\n        \n        // Récupérer les informations pour la sélection de catégorie\n        $product_name = $product->get_name();\n        $caces_code = get_caces_code_from_product_name($product_name);\n        $current_categories = '';\n        $current_nb_categories = '';\n        \n        if ($caces_code) {\n            // Récupérer les catégories actuelles de l'article\n            $current_categories = wc_get_order_item_meta($first_item->get_id(), 'choix_categorie', true);\n            $current_nb_categories = wc_get_order_item_meta($first_item->get_id(), 'nombre_categories', true);\n            \n            echo '<div style=\"margin-bottom: 8px;\"><strong>Catégories actuelles:</strong> ' . ($current_categories ? esc_html($current_categories) : 'Aucune') . '</div>';\n        }\n        \n        if ( empty( $similar_products ) ) {\n            echo '<div class=\"no-items-message\">Aucun produit similaire trouvé.</div>';\n        } else {\n            echo '<form id=\"replace_product_form\">';\n            echo '<div class=\"form-row\" style=\"margin-top: 8px;\">';\n            echo '<select name=\"similar_product_id\">';\n            echo '<option value=\"\">Options de produit</option>'; // Ligne par défaut\n            \n            // Ajouter la variation actuelle en premier\n            $current_product_id = $variation_id ? $variation_id : $product_id;\n            if ( $product->is_type('variation') ) {\n                $variation_attributes = wc_get_formatted_variation($product->get_variation_attributes(), true);\n                $simplified_attributes = str_replace(array('Catégorie(s):', 'Niveau:'), '', $variation_attributes);\n                echo '<option value=\"' . esc_attr( $current_product_id ) . '\" selected>' . esc_html( $simplified_attributes . ' (Actuel)' ) . '</option>';\n            } else {\n                echo '<option value=\"' . esc_attr( $current_product_id ) . '\" selected>' . esc_html( $product->get_name() . ' (Actuel)' ) . '</option>';\n            }\n            \n            foreach ( $similar_products as $similar_product ) {\n                // Éviter de dupliquer la variation actuelle\n                if ( $similar_product->ID == $current_product_id ) {\n                    continue;\n                }\n                \n                $product_obj = wc_get_product( $similar_product->ID );\n                if ( ! $product_obj ) {\n                    continue;\n                }\n\n                // Récupère les catégories pour exclure l'ID 336 si nécessaire\n                $product_categories = wp_get_post_terms(\n                    $product_obj->is_type('variation') ? $product_obj->get_parent_id() : $similar_product->ID,\n                    'product_cat',\n                    array('fields' => 'ids')\n                );\n\n                // On exclut la cat 336\n                if ( in_array( 336, $product_categories ) ) {\n                    continue;\n                }\n\n                $product_name = $product_obj->is_type('variation')\n                    ? wc_get_product($product_obj->get_parent_id())->get_name()\n                    : $product_obj->get_name();\n                \n                // On exclut tout produit dont le nom contient \"définir\"\n                if ( stripos($product_name, 'définir') !== false ) {\n                    continue;\n                }\n\n                // Affichage de l'option\n                if ( $product_obj->is_type('variation') ) {\n                    $variation_attributes   = wc_get_formatted_variation($product_obj->get_variation_attributes(), true);\n                    // Nettoyage de certains libellés (optionnel)\n                    $simplified_attributes  = str_replace(array('Catégorie(s):', 'Niveau:'), '', $variation_attributes);\n                    echo '<option value=\"' . esc_attr( $similar_product->ID ) . '\">' . esc_html( $simplified_attributes ) . '</option>';\n                } else {\n                    echo '<option value=\"' . esc_attr( $similar_product->ID ) . '\">' . esc_html( $similar_product->post_title ) . '</option>';\n                }\n            }\n            echo '</select>';\n            echo '</div>';\n            \n            // Ajouter la sélection de catégorie si applicable\n            if ($caces_code) {\n                echo '<div class=\"form-row\" style=\"margin-top: 8px;\">';\n                echo '<select name=\"new_categories\" id=\"category_select_with_actions\">';\n                echo '<option value=\"\">Choisir les catégories</option>';\n                \n                // Récupérer les combinaisons disponibles pour ce produit\n                $price_table = get_full_price_table();\n                if (isset($price_table[$caces_code])) {\n                    // Déterminer le niveau (initial ou recyclage) - par défaut initial\n                    $niveau = 'initial';\n                    if (stripos($product_name, 'recyclage') !== false) {\n                        $niveau = 'recyclage';\n                    }\n                    \n                    if (isset($price_table[$caces_code][$niveau]['combos'])) {\n                        foreach ($price_table[$caces_code][$niveau]['combos'] as $combo) {\n                            $categories = implode(', ', $combo['categories']);\n                            $selected = ($categories === $current_categories) ? ' selected' : '';\n                            echo '<option value=\"' . esc_attr($categories) . '\"' . $selected . '>' . esc_html($categories) . '</option>';\n                        }\n                    }\n                }\n                \n                // Option personnalisé\n                echo '<option value=\"Personnalisé\">Personnalisé</option>';\n                \n                echo '</select>';\n                \n                // Champs personnalisés (cachés par défaut)\n                echo '<div id=\"custom-category-fields-with-actions\" class=\"custom-category-fields\">';\n                echo '<input type=\"text\" name=\"custom_categories\" id=\"custom_categories_with_actions\" placeholder=\"Catégories personnalisées\" />';\n                echo '<input type=\"number\" name=\"custom_ut_pratique\" id=\"custom_ut_pratique_with_actions\" placeholder=\"UT Pratiques\" min=\"0\" step=\"0.5\" />';\n                echo '<div class=\"note\">Note: UT Théoriques = 1</div>';\n                echo '</div>';\n                echo '</div>';\n            }\n            \n            echo '<div class=\"form-row\" style=\"margin-top: 10px;\">';\n            echo '<button type=\"button\" id=\"replace_product_button\">Enregistrer</button>';\n            echo '</div>';\n            echo '<input type=\"hidden\" name=\"order_id\" value=\"' . esc_attr( $post->ID ) . '\">';\n            echo '<input type=\"hidden\" name=\"item_id\" value=\"' . esc_attr( $first_item->get_id() ) . '\">';\n            echo '<input type=\"hidden\" name=\"preserve_associations\" value=\"1\">';\n            echo '</form>';\n        }\n        echo '</div>'; // fin section\n    }\n\n    // --------------------------------------------------------------\n    // Formulaire pour changer la session, seulement si on a un item\n    // ET si on a des actions ($actions n'est pas vide)\n    // --------------------------------------------------------------\n    if ( $has_actions ) {\n        echo '<div class=\"form-section\">';\n        if ( empty( $actions ) ) {\n            echo '<div class=\"no-items-message\">Aucune session disponible pour ce produit.</div>';\n        } else {\n            echo '<form id=\"change_action_form\">';\n            echo '<div class=\"form-row\">';\n            echo '<select name=\"action_id\">';\n            echo '<option value=\"\">Sessions disponibles</option>'; // Ligne par défaut\n            foreach ( $actions as $action ) {\n                $cpt_id = $action->ID;\n\n                $lieu      = get_post_meta($cpt_id, 'fsbdd_select_lieusession', true);\n                $startdate = get_post_meta($cpt_id, 'we_startdate', true);\n                $enddate   = get_post_meta($cpt_id, 'we_enddate', true);\n                $numero    = get_the_title($cpt_id);\n\n                $lieu_complet         = $lieu ? trim($lieu) : 'Adresse inconnue';\n                $lieu_resume          = $lieu ? explode(',', $lieu)[0] : 'Lieu inconnu';\n                $lieu_resume          = ucfirst(strtolower(trim($lieu_resume)));\n                $startdate_formatted  = $startdate ? date_i18n('j F Y', $startdate) : 'Date non définie';\n                $enddate_formatted    = $enddate ? date_i18n('j F Y', $enddate) : 'Date non définie';\n\n                echo '<option value=\"' . esc_attr($cpt_id) . '\" \n                    data-lieu-complet=\"' . esc_attr($lieu_complet) . '\"\n                    data-startdate=\"' . esc_attr($startdate_formatted) . '\"\n                    data-enddate=\"' . esc_attr($enddate_formatted) . '\"\n                    data-numero=\"' . esc_attr($numero) . '\">'\n                    . esc_html(\"{$lieu_resume}, {$startdate_formatted}, N°{$numero}\") .\n                    '</option>';\n            }\n            echo '</select>';\n            echo '<button type=\"button\" id=\"change_action_button\">OK</button>';\n            echo '</div>';\n            echo '<input type=\"hidden\" name=\"order_id\" value=\"' . esc_attr( $post->ID ) . '\">';\n            echo '</form>';\n        }\n        echo '</div>'; // fin section\n    }\n\n    // ----------------------------------------------------------------\n    // Lien pour créer une nouvelle session\n    // ----------------------------------------------------------------\n    echo '<div class=\"form-section\">';\n    echo '<a href=\"https://formationstrategique.fr/wp-admin/post-new.php?post_type=action-de-formation\" target=\"_blank\" class=\"new-session-link\">';\n    echo '<span class=\"dashicons dashicons-plus-alt\"></span>Créer une nouvelle Session';\n    echo '</a>';\n    echo '</div>'; // Fin section\n\n    echo '</div>'; // Fin du container\n}\n\n// -----------------------------------------------------\n// JS pour remplacer le produit ou changer la session\n// -----------------------------------------------------\nadd_action( 'admin_footer', 'add_replace_product_js' );\nfunction add_replace_product_js() {\n    ?>\n    <script type=\"text/javascript\">\n    jQuery(document).ready(function($) {\n\n        // Gestion des variations pour le produit de remplacement (cas sans actions)\n        $('#similar_product_select').on('change', function() {\n            var productId = $(this).val();\n            var productType = $(this).find('option:selected').data('type');\n            \n            // Cacher le conteneur de variations par défaut\n            $('#similar_variations_container').hide();\n            \n            // Si c'est un produit variable, charger les variations\n            if (productId && productType === 'variable') {\n                $('#similar_product_loading').show();\n                \n                $.ajax({\n                    url: ajaxurl,\n                    type: 'POST',\n                    data: {\n                        action: 'get_product_variations',\n                        product_id: productId\n                    },\n                    success: function(response) {\n                        $('#similar_product_loading').hide();\n                        \n                        if (response.success && response.data.variations) {\n                            // Mettre à jour le select des variations\n                            var variationSelect = $('#similar_variation_select');\n                            variationSelect.empty();\n                            variationSelect.append('<option value=\"\">Choisir une variation</option>');\n                            \n                            $.each(response.data.variations, function(index, variation) {\n                                variationSelect.append('<option value=\"' + variation.id + '\">' + variation.name + '</option>');\n                            });\n                            \n                            // Afficher le conteneur des variations\n                            $('#similar_variations_container').show();\n                        }\n                    },\n                    error: function() {\n                        $('#similar_product_loading').hide();\n                        alert('Erreur lors du chargement des variations');\n                    }\n                });\n            }\n        });\n\n        // Gestion de l'affichage des champs personnalisés\n        $('#category_select').on('change', function() {\n            if ($(this).val() === 'Personnalisé') {\n                $('#custom-category-fields').show();\n            } else {\n                $('#custom-category-fields').hide();\n                $('#custom_categories').val('');\n                $('#custom_ut_pratique').val('');\n            }\n        });\n        \n        $('#category_select_with_actions').on('change', function() {\n            if ($(this).val() === 'Personnalisé') {\n                $('#custom-category-fields-with-actions').show();\n            } else {\n                $('#custom-category-fields-with-actions').hide();\n                $('#custom_categories_with_actions').val('');\n                $('#custom_ut_pratique_with_actions').val('');\n            }\n        });\n\n        // Remplacer le produit dans la commande et mettre à jour les catégories\n        $('#replace_product_button').on('click', function() {\n            // Désactiver le bouton pendant le traitement\n            $(this).prop('disabled', true).text('...');\n            \n            var productId = $('[name=\"similar_product_id\"]').val();\n            var variationId = $('[name=\"similar_variation_id\"]').val();\n            var productType = $('#similar_product_select').find('option:selected').data('type');\n            var preserveAssociations = $('[name=\"preserve_associations\"]').val();\n            var newCategories = $('[name=\"new_categories\"]').val();\n            var orderId = $('[name=\"order_id\"]').val();\n            var itemId = $('[name=\"item_id\"]').val();\n            \n            // Gérer les catégories personnalisées (cas avec actions)\n            if (newCategories === 'Personnalisé') {\n                var customCategories = $('#custom_categories_with_actions').val();\n                var customUTPratique = $('#custom_ut_pratique_with_actions').val();\n                \n                if (!customCategories || !customUTPratique) {\n                    alert('Veuillez remplir les catégories et UT pratiques personnalisées');\n                    $(this).prop('disabled', false).text('Enregistrer');\n                    return;\n                }\n                \n                newCategories = customCategories;\n            }\n            \n            // Déterminer l'ID à utiliser (variation ou produit)\n            var finalId = productId;\n            if (productType === 'variable' && variationId) {\n                finalId = variationId;\n            } else if (productType === 'variable' && !variationId) {\n                alert('Veuillez sélectionner une variation');\n                $(this).prop('disabled', false).text('Enregistrer');\n                return;\n            }\n\n            if (!finalId) {\n                alert('Veuillez sélectionner un produit');\n                $(this).prop('disabled', false).text('Enregistrer');\n                return;\n            }\n\n            // Fonction pour mettre à jour les catégories après le remplacement\n            function updateCategories() {\n                if (newCategories && itemId) {\n                    var categoryData = {\n                        'action': 'update_order_item_categories',\n                        'order_id': orderId,\n                        'item_id': itemId,\n                        'categories': newCategories\n                    };\n                    \n                    // Ajouter les données personnalisées si nécessaire\n                    if ($('#category_select_with_actions').val() === 'Personnalisé') {\n                        categoryData.is_custom_mode = true;\n                        categoryData.custom_ut_pratique = $('#custom_ut_pratique_with_actions').val();\n                        categoryData.custom_ut_theorique = 1; // Toujours 1 pour les théoriques\n                    }\n                    \n                    $.post(ajaxurl, categoryData, function(categoryResponse) {\n                        if(categoryResponse.success) {\n                            alert('Produit et catégories mis à jour avec succès !');\n                            location.reload();\n                        } else {\n                            alert('Produit remplacé mais erreur lors de la mise à jour des catégories: ' + categoryResponse.data);\n                            location.reload();\n                        }\n                    }).fail(function() {\n                        alert('Produit remplacé mais erreur lors de la mise à jour des catégories.');\n                        location.reload();\n                    });\n                } else {\n                    alert('Produit remplacé avec succès !');\n                    location.reload();\n                }\n            }\n\n            var data = {\n                'action': 'replace_product_in_order',\n                'order_id': orderId,\n                'product_id': finalId,\n                'preserve_associations': preserveAssociations || '0'\n            };\n\n            $.post(ajaxurl, data, function(response) {\n                if(response.success) {\n                    // Mettre à jour les catégories après le remplacement réussi\n                    updateCategories();\n                } else {\n                    alert('Erreur: ' + response.data.message);\n                    $('#replace_product_button').prop('disabled', false).text('Enregistrer');\n                }\n            }).fail(function() {\n                alert('Erreur lors du traitement de la requête.');\n                $('#replace_product_button').prop('disabled', false).text('Enregistrer');\n            });\n        });\n\n        // Changer la session\n        $('#change_action_button').on('click', function() {\n            // Désactiver le bouton pendant le traitement\n            $(this).prop('disabled', true).text('...');\n            \n            var data = {\n                'action': 'change_action_in_order',\n                'order_id': $('[name=\"order_id\"]').val(),\n                'action_id': $('[name=\"action_id\"]').val()\n            };\n\n            if (!data.action_id) {\n                alert('Veuillez sélectionner une session');\n                $(this).prop('disabled', false).text('OK');\n                return;\n            }\n\n            $.post(ajaxurl, data, function(response) {\n                if(response.success) {\n                    alert(response.data.message);\n                    location.reload();\n                } else {\n                    alert('Erreur: ' + response.data.message);\n                    $('#change_action_button').prop('disabled', false).text('OK');\n                }\n            }).fail(function() {\n                alert('Erreur lors de la mise à jour.');\n                $('#change_action_button').prop('disabled', false).text('OK');\n            });\n        });\n        \n        // Gestion de la mise à jour des catégories (produits sans actions)\n        $('#update_categories_button').on('click', function() {\n            var button = $(this);\n            var originalText = button.text();\n            button.prop('disabled', true).text('Mise à jour...');\n            \n            var categories = $('#category_select').val();\n            var orderId = $('[name=\"order_id\"]').val();\n            var itemId = $('[name=\"item_id\"]').val();\n            \n            // Gestion du mode personnalisé\n            if (categories === 'Personnalisé') {\n                var customCategories = $('#custom_categories').val();\n                var customUTPratique = $('#custom_ut_pratique').val();\n                \n                if (!customCategories || !customUTPratique) {\n                    alert('Veuillez remplir les catégories et UT pratiques personnalisées');\n                    button.prop('disabled', false).text(originalText);\n                    return;\n                }\n                \n                categories = customCategories;\n            }\n            \n            if (!categories) {\n                alert('Veuillez sélectionner des catégories');\n                button.prop('disabled', false).text(originalText);\n                return;\n            }\n            \n            var ajaxData = {\n                action: 'update_order_item_categories',\n                order_id: orderId,\n                item_id: itemId,\n                categories: categories\n            };\n            \n            // Ajouter les données personnalisées si nécessaire\n            if ($('#category_select').val() === 'Personnalisé') {\n                ajaxData.is_custom_mode = true;\n                ajaxData.custom_ut_pratique = $('#custom_ut_pratique').val();\n                ajaxData.custom_ut_theorique = 1; // Toujours 1 pour les théoriques\n            }\n            \n            $.ajax({\n                url: ajaxurl,\n                type: 'POST',\n                data: ajaxData,\n                success: function(response) {\n                    if (response.success) {\n                        alert('Catégories mises à jour avec succès!');\n                        location.reload();\n                    } else {\n                        alert('Erreur: ' + response.data.message);\n                        button.prop('disabled', false).text(originalText);\n                    }\n                },\n                error: function() {\n                    alert('Erreur lors de la mise à jour des catégories');\n                    button.prop('disabled', false).text(originalText);\n                }\n            });\n        });\n\n    });\n    </script>\n    <?php\n}\n\n// ------------------------------------------------------------------\n// Nouvel endpoint AJAX pour récupérer les variations d'un produit\n// ------------------------------------------------------------------\nadd_action('wp_ajax_get_product_variations', 'get_product_variations_ajax');\nfunction get_product_variations_ajax() {\n    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;\n    \n    if (!$product_id) {\n        wp_send_json_error(['message' => 'ID de produit manquant']);\n    }\n    \n    $product = wc_get_product($product_id);\n    \n    if (!$product || !$product->is_type('variable')) {\n        wp_send_json_error(['message' => 'Ce n\\'est pas un produit variable']);\n    }\n    \n    $variations = [];\n    $available_variations = $product->get_available_variations();\n    \n    foreach ($available_variations as $variation) {\n        $variation_obj = wc_get_product($variation['variation_id']);\n        if (!$variation_obj) continue;\n        \n        $variation_attributes = wc_get_formatted_variation($variation_obj->get_variation_attributes(), true);\n        // Nettoyage des libellés si nécessaire\n        $simplified_attributes = str_replace(array('Catégorie(s):', 'Niveau:'), '', $variation_attributes);\n        \n        $variations[] = [\n            'id' => $variation['variation_id'],\n            'name' => $simplified_attributes\n        ];\n    }\n    \n    wp_send_json_success(['variations' => $variations]);\n}\n\n// ------------------------------------------------------------------\n// Handler AJAX pour remplacer le produit dans la commande - VERSION OPTIMISÉE\n// ------------------------------------------------------------------\nadd_action( 'wp_ajax_replace_product_in_order', 'handle_replace_product_in_order' );\nfunction handle_replace_product_in_order() {\n    $order_id   = isset($_POST['order_id']) ? intval($_POST['order_id']) : 0;\n    $product_id = isset($_POST['product_id']) ? intval($_POST['product_id']) : 0;\n    $preserve_associations = isset($_POST['preserve_associations']) ? $_POST['preserve_associations'] === '1' : false;\n\n    if ( !$order_id || !$product_id ) {\n        wp_send_json_error(['message' => 'Paramètres manquants.']);\n    }\n\n    $order = wc_get_order( $order_id );\n    if (!$order) {\n        wp_send_json_error(['message' => 'Commande introuvable.']);\n    }\n\n    $items = $order->get_items();\n\n    // Si la commande est vide, on ajoute directement le produit\n    if ( empty($items) ) {\n        $product = wc_get_product( $product_id );\n        if (!$product) {\n            wp_send_json_error(['message' => 'Produit introuvable.']);\n        }\n        $order->add_product( $product, 1 );\n        $order->calculate_totals();\n        $order->save();\n        wp_send_json_success(['message' => 'Produit ajouté avec succès.']);\n    }\n\n    // Si on veut préserver les associations (cas avec action-de-formation)\n    if ( $preserve_associations ) {\n        $first_item = reset($items);\n        \n        // Sauvegarder toutes les métadonnées importantes AVANT la modification\n        $existing_meta = [];\n        $meta_data = $first_item->get_meta_data();\n        \n        foreach ( $meta_data as $meta ) {\n            // Préserver toutes les métadonnées liées aux sessions/formations\n            if ( strpos($meta->key, 'fsbdd_') === 0 || \n                 strpos($meta->key, 'we_') === 0 || \n                 in_array($meta->key, ['session_data']) ) {\n                $existing_meta[$meta->key] = $meta->value;\n            }\n        }\n        \n        // Récupérer le nouveau produit\n        $new_product = wc_get_product( $product_id );\n        if (!$new_product) {\n            wp_send_json_error(['message' => 'Nouveau produit introuvable.']);\n        }\n        \n        // Modifier directement l'item existant au lieu de le supprimer/recréer\n        $first_item->set_product_id( $new_product->is_type('variation') ? $new_product->get_parent_id() : $product_id );\n        $first_item->set_variation_id( $new_product->is_type('variation') ? $product_id : 0 );\n        $first_item->set_name( $new_product->get_name() );\n        \n        // Restaurer toutes les métadonnées préservées\n        foreach ( $existing_meta as $key => $value ) {\n            $first_item->update_meta_data( $key, $value );\n        }\n        \n        $first_item->save();\n        \n    } else {\n        // Cas normal : remplacer complètement l'item (sans associations à préserver)\n        $first_item = reset($items);\n        $order->remove_item($first_item->get_id());\n\n        $product = wc_get_product( $product_id );\n        if (!$product) {\n            wp_send_json_error(['message' => 'Produit introuvable.']);\n        }\n\n        // Ajouter le nouveau produit\n        $item_id     = $order->add_product( $product, 1 );\n        $product_meta = $product->get_meta_data();\n        $order_item   = new WC_Order_Item_Product( $item_id );\n\n        // Copier des métadonnées essentielles si nécessaire\n        foreach ( $product_meta as $meta ) {\n            if ( in_array( $meta->key, ['essential_meta_1', 'essential_meta_2', 'essential_meta_3'] ) ) {\n                $order_item->add_meta_data( $meta->key, $meta->value );\n            }\n        }\n        $order_item->save();\n    }\n\n    // Recalculer les totaux\n    $order->calculate_totals();\n    $order->save();\n\n    wp_send_json_success(['message' => 'Produit remplacé avec succès.']);\n}\n\n// ------------------------------------------------------------------\n// Handler AJAX pour changer la session\n// ------------------------------------------------------------------\nadd_action('wp_ajax_change_action_in_order', 'change_action_in_order');\nfunction change_action_in_order() {\n    $order_id  = isset($_POST['order_id']) ? intval($_POST['order_id']) : 0;\n    $action_id = isset($_POST['action_id']) ? intval($_POST['action_id']) : 0;\n\n    if (!$order_id || !$action_id) {\n        wp_send_json_error(['message' => 'ID de commande ou d\\'action manquant.']);\n    }\n\n    $order = wc_get_order($order_id);\n    if (!$order) {\n        wp_send_json_error(['message' => 'Commande introuvable.']);\n    }\n\n    $items = $order->get_items();\n    if (empty($items)) {\n        wp_send_json_error(['message' => 'Aucun produit dans la commande.']);\n    }\n\n    $first_item = reset($items);\n    $product_id = $first_item->get_product_id();\n\n    // Nettoyer les anciennes convocations\n    global $wpdb;\n    $wpdb->query($wpdb->prepare(\n        \"DELETE FROM {$wpdb->prefix}postmeta WHERE post_id = %d AND meta_key LIKE 'fsbdd_convoc_%%'\",\n        $order_id\n    ));\n\n    // Mettre à jour les métadonnées de la nouvelle session\n    $lieu_complet = get_post_meta($action_id, 'fsbdd_select_lieusession', true) ?: 'Adresse inconnue';\n    $startdate    = get_post_meta($action_id, 'we_startdate', true);\n    $enddate      = get_post_meta($action_id, 'we_enddate', true);\n    $numero       = get_the_title($action_id);\n\n    $startdate_formatted = $startdate ? date_i18n('j F Y', $startdate) : 'Date non définie';\n    $enddate_formatted   = $enddate ? date_i18n('j F Y', $enddate) : 'Date non définie';\n\n    // Mettre à jour les métadonnées INDIVIDUELLES comme le frontend\n    $first_item->update_meta_data('fsbdd_relsessaction_cpt_produit', $action_id);\n    $first_item->update_meta_data('we_startdate', $startdate_formatted);\n    $first_item->update_meta_data('we_enddate', $enddate_formatted);\n    $first_item->update_meta_data('fsbdd_actionum', $numero);\n    $first_item->update_meta_data('fsbdd_select_lieuforminter', $lieu_complet);\n\n    // Supprimer l'ancienne métadonnée groupée si elle existe\n    $first_item->delete_meta_data('session_data');\n\n    // Ajouter de nouvelles convocations si des dates sont définies pour la nouvelle session\n    $planning = get_post_meta($action_id, 'fsbdd_planning', true);\n    $planning = maybe_unserialize($planning);\n\n    if (!empty($planning) && is_array($planning)) {\n        foreach ($planning as $day) {\n            if (!empty($day['fsbdd_planjour'])) {\n                $date = date('d/m/Y', strtotime($day['fsbdd_planjour']));\n                update_post_meta($order_id, 'fsbdd_convoc_' . $date, '1'); // Coché par défaut\n            }\n        }\n    }\n\n    $first_item->save();\n    $order->calculate_totals();\n    $order->save();\n\n    wp_send_json_success(['message' => 'La session a été changée avec succès et les convocations mises à jour.']);\n}\n\n// ------------------------------------------------------------------\n// Handler AJAX pour mettre à jour les catégories d'un article de commande\n// ------------------------------------------------------------------\nadd_action('wp_ajax_update_order_item_categories', 'update_order_item_categories');\nfunction update_order_item_categories() {\n    $order_id = isset($_POST['order_id']) ? intval($_POST['order_id']) : 0;\n    $item_id = isset($_POST['item_id']) ? intval($_POST['item_id']) : 0;\n    $categories = isset($_POST['categories']) ? sanitize_text_field($_POST['categories']) : '';\n    $is_custom_mode = isset($_POST['is_custom_mode']) ? (bool)$_POST['is_custom_mode'] : false;\n    $custom_ut_pratique = isset($_POST['custom_ut_pratique']) ? floatval($_POST['custom_ut_pratique']) : 0;\n    $custom_ut_theorique = isset($_POST['custom_ut_theorique']) ? floatval($_POST['custom_ut_theorique']) : 1;\n\n    if (!$order_id || !$item_id || !$categories) {\n        wp_send_json_error(['message' => 'Paramètres manquants.']);\n    }\n\n    $order = wc_get_order($order_id);\n    if (!$order) {\n        wp_send_json_error(['message' => 'Commande introuvable.']);\n    }\n\n    // Récupérer l'article de commande\n    $order_item = $order->get_item($item_id);\n    if (!$order_item) {\n        wp_send_json_error(['message' => 'Article de commande introuvable.']);\n    }\n\n    // Calculer le nombre de catégories\n    $categories_array = array_map('trim', explode(',', $categories));\n    $nb_categories = count($categories_array);\n\n    // Mettre à jour les métadonnées\n    $order_item->update_meta_data('choix_categorie', $categories);\n    $order_item->update_meta_data('nombre_categories', $nb_categories);\n\n    // Gestion des UT selon le mode\n    if ($is_custom_mode) {\n        // Mode personnalisé : utiliser les valeurs fournies\n        $order_item->update_meta_data('ut_pratique', $custom_ut_pratique);\n        $order_item->update_meta_data('ut_theorique', $custom_ut_theorique);\n        \n        // Log pour debug\n        error_log(\"UT Debug Side Commande (Mode personnalisé) - Categories: $categories, UT Pratique: $custom_ut_pratique, UT Théorique: $custom_ut_theorique\");\n    } else {\n        // Mode normal : calculer les UT à partir de la grille\n        if (function_exists('get_caces_code_from_product_name') && function_exists('get_ut_for_category')) {\n            $product = $order_item->get_product();\n            if ($product) {\n                $product_name = $product->get_name();\n                $formation_key = get_caces_code_from_product_name($product_name);\n                \n                if ($formation_key) {\n                    $total_ut_pratique = 0;\n                    $total_ut_theorique = 0;\n                    \n                    foreach ($categories_array as $category) {\n                        $ut_data = get_ut_for_category($formation_key, $category);\n                        if ($ut_data && is_array($ut_data)) {\n                            $total_ut_pratique += floatval($ut_data['ut_pratique'] ?? 0);\n                            $total_ut_theorique += floatval($ut_data['ut_theorique'] ?? 0);\n                        }\n                    }\n                    \n                    // Toujours sauvegarder les UT, même si elles sont à 0\n                    $order_item->update_meta_data('ut_pratique', $total_ut_pratique);\n                    $order_item->update_meta_data('ut_theorique', $total_ut_theorique);\n                    \n                    // Log pour debug\n                    error_log(\"UT Debug Side Commande (Mode normal) - Formation: $formation_key, Categories: $categories, UT Pratique: $total_ut_pratique, UT Théorique: $total_ut_theorique\");\n                } else {\n                    error_log(\"UT Debug Side Commande - Formation key not found for product: $product_name\");\n                }\n            }\n        }\n    }\n\n    // Sauvegarder les modifications\n    $order_item->save();\n    $order->calculate_totals();\n    $order->save();\n\n    wp_send_json_success(['message' => 'Catégories mises à jour avec succès.']);\n}",
  "tags": "",
  "scope": "admin",
  "priority": "10",
  "active": true,
  "modified": "2025-07-09 21:28:30",
  "revision": "337",
  "cloud_id": null
}